import{_ as s,o as a,c as n,N as o}from"./chunks/framework.7e203a6d.js";const h=JSON.parse('{"title":"Instructions","description":"","frontmatter":{},"headers":[],"relativePath":"guide/deployment/docker.md"}'),e={name:"guide/deployment/docker.md"},l=o(`<h1 id="instructions" tabindex="-1">Instructions <a class="header-anchor" href="#instructions" aria-label="Permalink to &quot;Instructions&quot;">â€‹</a></h1><p>This section will help to spin up Authup in a <strong>docker</strong> container environment.</p><h2 id="requirements" tabindex="-1">Requirements <a class="header-anchor" href="#requirements" aria-label="Permalink to &quot;Requirements&quot;">â€‹</a></h2><p>The following guide is based on some shared assumptions:</p><ul><li>OS <code>debian</code> or <code>ubuntu</code></li><li>Docker <code>v20.x</code> is installed</li><li>Min. <code>2</code> cores</li><li>Min. <code>5G</code> hard disk</li></ul><h2 id="step-1-create-a-new-project" tabindex="-1">Step. 1: Create a new project <a class="header-anchor" href="#step-1-create-a-new-project" aria-label="Permalink to &quot;Step. 1: Create a new project&quot;">â€‹</a></h2><p>Create and change into a new directory.</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">mkdir</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">authup</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">cd</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">authup</span></span>
<span class="line"></span></code></pre></div><h2 id="step-2-configuration" tabindex="-1">Step. 2: Configuration <a class="header-anchor" href="#step-2-configuration" aria-label="Permalink to &quot;Step. 2: Configuration&quot;">â€‹</a></h2><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>It is important to mention that in the docker environment the configuration for the <code>PORT</code> option is ignored.</p></div><p>So when authup container is run, the rules are as follows:</p><ul><li>If only <strong>one service</strong> is started, it always runs on the internal port <code>3000</code> and can be mounted on another external port ( <code>-p &lt;port&gt;:3000</code>)</li><li>If <strong>all services</strong> are started from the same container, the internal port mapping looks like this: <ul><li><strong>UI</strong>: <code>3000</code></li><li><strong>API</strong>: <code>3001</code></li></ul></li></ul><p>Follow the instructions for <a href="./configuration.html">configuring</a> Authup using a configuration file or via environment variables. In case of a configuration file, place it in the root directory.</p><h2 id="step-3-boot-up" tabindex="-1">Step. 3: Boot up <a class="header-anchor" href="#step-3-boot-up" aria-label="Permalink to &quot;Step. 3: Boot up&quot;">â€‹</a></h2><p>To start all services from the same service, the following command should be executed:</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">run</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">authup/authup:latest</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#FFCB6B;">-v</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">authup:/usr/src/writable</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#FFCB6B;">-p</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">3000</span><span style="color:#C3E88D;">:</span><span style="color:#F78C6C;">3000</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># Mount ui port 3000 to external port 3000</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#FFCB6B;">-p</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">3001</span><span style="color:#C3E88D;">:</span><span style="color:#F78C6C;">3001</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># Mount api port 3001 to external port 3001</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#FFCB6B;">cli</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">start</span></span>
<span class="line"></span></code></pre></div><p>To start each service separately, the following command should be executed depending on the service:</p><p><strong><code>API</code></strong></p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">run</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">authup/authup:latest</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#FFCB6B;">-v</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">authup:/usr/src/writable</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#FFCB6B;">-p</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">3001</span><span style="color:#C3E88D;">:</span><span style="color:#F78C6C;">3000</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># Mount api port 3000 to external port 3001</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#FFCB6B;">api</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">start</span></span>
<span class="line"></span></code></pre></div><p><strong><code>UI</code></strong></p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">run</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">authup/authup:latest</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#FFCB6B;">-p</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">3000</span><span style="color:#C3E88D;">:</span><span style="color:#F78C6C;">3000</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># Mount ui port 3000 to external port 3000</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#FFCB6B;">ui</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">start</span></span>
<span class="line"></span></code></pre></div><p>Now all should be set up, and you are ready to go ðŸŽ‰</p><p>This will lunch the following application with default settings:</p><ul><li>UI: <code>http://127.0.0.1:3000/</code></li><li>API: <code>http://127.0.0.1:3001/</code></li><li>Docs: <code>http://127.0.0.1:3001/docs</code></li></ul>`,24),t=[l];function p(r,c,i,C,d,u){return a(),n("div",null,t)}const A=s(e,[["render",p]]);export{h as __pageData,A as default};
